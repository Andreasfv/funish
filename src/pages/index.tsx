import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession,  } from "next-auth/react";
import "../i18";

import { api } from "../utils/api";
import { useTranslation } from "react-i18next";
import { useAdmin } from "../utils/admin/useAdmin";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const [wait, setWait] = useState(false)
  const router = useRouter();
  const { data: me, isLoading } = api.users.me.useQuery();
  const { mutate, isLoading: meLoading } = api.users.addUserToOrganization.useMutation()
  const session = useSession()
  useEffect(() => {
    if (me?.data?.user?.id && !me?.data?.user?.organizationId && !meLoading) {
      if(isLoading || wait) return
      setWait(true)
      mutate({
        userId: me?.data?.user?.id,
        organizationId: "clfmhi3mg0000xron5petwdsp",
      }, {
        onSuccess: () => {
          router
            .push(`/[organizationId]/dashboard`, {
              query: { organizationId: me?.data?.user?.organizationId },
            })
            .catch((err) => console.warn(err));
        }
      })
    }
  }, [isLoading, me?.data?.user?.id, me?.data?.user?.organizationId, meLoading, mutate, router, wait]);

  useEffect(() => {
    console.log(session)
    if (session.data?.user.organizationId) {
      router
        .push(`/${session.data.user.organizationId}/dashboard`)
        .catch((err) => console.warn(err));
    }
  }, [router, session])

  return (
    <>
      <Head>
        <title>L2T3</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-1 md:gap-8">
          </div>
          <div className="flex flex-col items-center gap-2">
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  const { mutate } = api.users.addUserToOrganization.useMutation()

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={
          sessionData
            ? () => void signOut()
            : () =>
                void signIn().then((user) => {
                  console.log(user)
                })
        }
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
