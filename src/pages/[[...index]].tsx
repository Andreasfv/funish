import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import "../i18";

import { api } from "../utils/api";
import { useTranslation } from "react-i18next";
import { useAdmin } from "../utils/admin/useAdmin";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const [wait, setWait] = useState(false);
  const [orgAssignSuccessful, setOrgAssignSuccessful] = useState(true);
  const router = useRouter();
  const session = useSession();
  const { mutate, isLoading: meLoading } =
    api.users.addUserToOrganization.useMutation();

  const { data: organization, refetch } =
    api.organizations.organizationExists.useQuery(
      router.query?.organizationId as string,
      {
        enabled:
          !!router.query?.organizationId &&
          session.status == "authenticated" &&
          !!router.query?.organizationId !== undefined,
      }
    );
  const sessionData = session.data;

  useEffect(() => {
    if (
      session?.data?.user?.id &&
      !session?.data?.user?.organizationId &&
      !meLoading
    ) {
      if (wait) return;
      setWait(true);
      // TODO Handle this with JWT Link to SignIn page for associating organization
      // with user on creation / first SignIn
      console.log(router.query);
      if (router.query?.organizationId) {
        refetch()
          .then((organizationExists) => {
            if (organizationExists?.data?.status) {
              mutate(
                {
                  userId: session?.data?.user?.id ?? "",
                  organizationId: router.query?.organizationId as string,
                },
                {
                  onSuccess: () => {
                    setOrgAssignSuccessful(true);
                    session.data.user.organizationId = router.query
                      ?.organizationId as string;
                    router
                      .push(`/${session.data.user.organizationId}/dashboard`)
                      .catch((err) => console.warn(err));
                  },
                  onError: () => {
                    setTimeout(() => {
                      void signOut();
                    }, 6000);
                  },
                }
              );
            } else {
              setTimeout(() => {
                void signOut();
              }, 6000);
            }
          })
          .catch((err) => console.warn(err));
      }
    }
  }, [
    meLoading,
    mutate,
    refetch,
    router,
    session?.data?.user,
    session?.data?.user?.id,
    session?.data?.user?.organizationId,
    session.status,
    wait,
  ]);

  useEffect(() => {
    if (session.data?.user.organizationId) {
      router
        .push(`/${session.data.user.organizationId}/dashboard`)
        .catch((err) => console.warn(err));
    } else {
    }

    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [session]);

  return (
    <>
      <Head>
        <title>L2T3</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Straffe<span className="text-[hsl(280,100%,70%)]">Pils</span>
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-1 md:gap-8"></div>
          <div className="flex flex-col items-center gap-2">
            <p className="text-center text-white">
              {!orgAssignSuccessful && "Organization login link is invalid"}
              {session.status == "authenticated" &&
                !session.data.user.organizationId && (
                  <>
                    <p>
                      You were successfully registered but you are not
                      associated with any organization. To sign in with an
                      organization, please contact your administrator for a
                      login link.
                    </p>
                    <p>You will now be logged out.</p>
                  </>
                )}
            </p>
            <button
              className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
              onClick={
                sessionData
                  ? () => void signOut()
                  : () =>
                      void signIn("", {}, {}).then((user) => {
                        console.log(user);
                      })
              }
            >
              {sessionData ? "Sign out" : "Sign in"}
            </button>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
